version: "3.8"

services:
  # 메인 애플리케이션
  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - DATABASE_URL=file:./prisma/dev.db
      - AUTH_SECRET=${AUTH_SECRET}
      - AUTH_URL=http://localhost:3000
      - AUTH_GOOGLE_ID=${AUTH_GOOGLE_ID}
      - AUTH_GOOGLE_SECRET=${AUTH_GOOGLE_SECRET}
      - AUTH_KAKAO_ID=${AUTH_KAKAO_ID}
      - AUTH_KAKAO_SECRET=${AUTH_KAKAO_SECRET}
      - NEXT_PUBLIC_BASE_URL=http://localhost:3000
    volumes:
      - ./prisma/dev.db:/app/prisma/dev.db
    depends_on:
      - db
    networks:
      - weproud-network
    restart: unless-stopped

  # 데이터베이스 (개발용)
  db:
    image: sqlite3:latest
    volumes:
      - db_data:/data
    networks:
      - weproud-network
    command: ["tail", "-f", "/dev/null"] # 컨테이너 유지

  # Redis (세션 저장소 및 캐싱용)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - weproud-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx (리버스 프록시)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - weproud-network
    restart: unless-stopped

volumes:
  db_data:
  redis_data:

networks:
  weproud-network:
    driver: bridge
